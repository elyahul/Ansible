---
 - name: Play1
   hosts:
      - hub
      - spoke2
   vars:
     bandwidth: '10'
     iface: 'Tunnel1'
     config: {}
     parser_data: "{{ lookup('file', '/home/elil/Yml/ansible/{{inventory_hostname}}_qos_cfg.json') | from_json }}"
     

   tasks:

#    - name: Check reachability
#       ios_command:
#         commands: "ping {{ansible_host}} repeat 1"
#         wait_for: 
#           - result[0] contains "Success rate is 100 percent" 

#     - pause:
#          prompt: "Please input Tunnel Bandwidth "
#          echo: yes
#       register: prompt1
#       run_once: true

#     - set_fact:
#         bandwidth: "{{prompt1.user_input}}"
#         no_log: true
#       run_once: true

     - set_fact:
         speed: "{{ bandwidth | get_variable }}"
       run_once: true
     - debug: var=speed
#     - name: Check for correct input
#       assert:
#         that:
#           - "bandwidth  == '10' or bandwidth == '8'"
#       run_once: true

#     - pause:
#          prompt: "Please input Tunnel Interface to Configure "
#          echo: yes
#       register: prompt2
#       run_once: true

#     - set_fact:
#         iface: "{{prompt2.user_input}}"
#         no_log: true
#       run_once: true

     - name: Check for correct input
       assert:
         that:
           - "'Tunnel' in iface "
       run_once: true

     - name: Get Configuration
       ios_command:
         commands:
           - 'show policy-map interface Tunnel1'
            
#          wait_for:
#           - result[0] contains "permit"
#           - result[1] contains "end"
#           - result[2] contains "service"
#           - result[3] contains "end" '''
       register: QoS_Config
     
#     - debug: var=Qos_Config

     -  set_fact:
          qos_config: "{{ QoS_Config.stdout_lines[0] }}" 
    
     - debug: var=qos_config

#     - set_fact:
#         access_list: "{{Config.stdout_lines[0]}}"

#     - set_fact:
 #        iface_list: "{{Config.stdout_lines[1][4::]}}"

 #    - set_fact:
 #        qos_list: "{{Config.stdout_lines[2][4::]}}"

 #    - set_fact:
  #       class_list: "{{Config.stdout_lines[3][4::]}}"
      
#     - set_fact:
#        config: "{{ config | combine({item: access_list}) }}"
#       with_items: "Access_Config"

 #    - set_fact:
#        config: "{{ config | combine({item: iface_list}) }}"
 #      with_items: "Tunnel_Config"

  #   - set_fact:
#        config: "{{ config | combine({item: qos_list}) }}"
#       with_items: "Qos_Config"

 #    - set_fact:
#        config: "{{ config | combine({item: class_list}) }}"
#       with_items: "Class_Config"
 
#     - debug: var=config

     - name: Create Directory for Output File
       file:
         path: /home/elil/Yml/ansible/
         state: directory
         mode: 0755
       run_once: true

     - name: Copy output to file
       copy:
         content="{{ qos_config | to_nice_json }}"
         dest="/home/elil/Yml/ansible/{{inventory_hostname}}_qos_cfg.json"
     - debug: 
         msg: "{{ parser_data }}"

#     - name: Get Variables
 #      set_fact:
#         p_map: "{{ parser_data | check_for_qos }}"
#         c_map: "{{ parser_data | create_class_map  }}"

       
 #    - debug: var=p_map
#     - debug: var=c_map
